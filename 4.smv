MODULE main 
  VAR
    change_value : 1..4;
    change_index  : 0..3;
    change_type: {guess, unguess};
    c0 : cell(0, 0, change_value, change_index);
    c1 : cell(1, 0, change_value, change_index);
    c2 : cell(2, 0, change_value, change_index);
    c3 : cell(3, 0, change_value, change_index);
    
  -- change_value and change_index are randomly determined
  

  DEFINE
    -- think of defines as macros. Ratber tba 
    grid :=  [ c0.n, c1.n, c2.n, c3.n ];
    box0  :=  [grid[0],grid[3]];
    


  CTLSPEC ! EF((box0[0]=1) & (box0[1]=2 ));

MODULE cell(index, value, change_val, change_index, change_type)
  VAR
    n : 0..4;
    i : 0..3;

  ASSIGN
    init(i) := index;
    init(n) := value;

    next(i) := i;
    next(n) := case
      change_index = i : change_val;
      TRUE : n;
    esac;



MODULE box_constraint(box_array)
-- models a 1*2 box  
-- param box_array is an array_expression with dimensions 1*2
VAR
  b1 : boolean;
  b2 : boolean;

ASSIGN
  init(b1) := FALSE;
  init(b2) := FALSE;
